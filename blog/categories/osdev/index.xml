<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>osdev on Zachary Yedidia&#39;s blog</title>
    <link>https://zyedidia.github.io/blog/categories/osdev/</link>
    <description>Recent content in osdev on Zachary Yedidia&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://zyedidia.github.io/blog/categories/osdev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Writing a bare-metal RISC-V application in D</title>
      <link>https://zyedidia.github.io/blog/posts/1-d-baremetal/</link>
      <pubDate>Wed, 08 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://zyedidia.github.io/blog/posts/1-d-baremetal/</guid>
      <description>This post will show you how to use D to write a bare-metal &amp;ldquo;Hello world&amp;rdquo; program that targets the RISC-V QEMU simulator. In a future blog post we&amp;rsquo;ll build on this to target actual hardware: the VisionFive 2 SBC. See blog-code for the final code from this post.
Why D? Recently I&amp;rsquo;ve been writing bare-metal code in C, and I&amp;rsquo;ve become a bit frustrated with the lack of features that C provides.</description>
    </item>
    
  </channel>
</rss>
